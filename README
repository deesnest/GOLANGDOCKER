Create Build Environment using Docker on Centos 

Introduction  

Docker is an open source platform for building, deploying, and managing containerized applications. It helps developers to package applications into containers.  

You can follow these steps on local machine (VM) or EC2 instance. 

Steps to install Docker on Centos  

You can refer to official document here - https://docs.docker.com/engine/install/centos/ 

a. Install using the repository 

1. sudo yum install -y yum-utils 

2. sudo yum-config-manager \ 

    --add-repo \ 

    https://download.docker.com/linux/centos/docker-ce.repo 

 b. Install Docker Engine 

Install the latest version of Docker Engine and containerd, or go to the next step to install a specific version: 

1. sudo yum install docker-ce docker-ce-cli containerd.io 

To install a specific version of Docker Engine, list the available versions in the repo, then select and install: 

1. yum list docker-ce --showduplicates | sort -r 

2. sudo yum install docker-ce- 3:20.10.8-3.el8 docker-ce-cli-1:20.10.8-3.el8 containerd.io 

c. Start the docker 

1. sudo systemctl start docker 

  

Containerization 

To create container from custom image which contains centos, golang, gin, aws cli, run the following dockerfile. Makesure dockerfile is in the same folder as that of your source code. 

1. create a file with name "dockerfile" and save the following code 

# The base go-image 

FROM alpine:latest 

FROM deepatp/golangcentos:base       # This is custom public image 

RUN su - 

RUN mkdir /app                               # Creates working directory in the container 

COPY . /app/                                     # Copy all files from the current directory to the app directory 

WORKDIR /app                                # Set working directory 

#Set AWS creadentials as Environment variables 

ENV AWS_ACCESS_KEY_ID= ****************** 

ENV AWS_SECRET_ACCESS_KEY= ***************** 

# Bring aws-sdk to local environment 

RUN  go get -u github.com/aws/aws-sdk-go 

# create a build from the source code 

RUN go build filename1.go 

RUN go build filename2.go      #needed if you have multiple files to build on the same container 

  

2. Create an image using the dockerfile by running the command - 

docker build -t <image-name> .       

3. Create a container from the image created in previous steps using the command- 

docker run -it <image-name> ./buildname 

  
Source-code at : https://github.com/deesnest/GOLANGDOCKER.git 

 

  

 

 

 
